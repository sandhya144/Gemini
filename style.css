/* Import google fonts */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;400;500;600&display=swap');

*{
    font-family: "Poppins", sans-serif;
    box-sizing: border-box;
    margin: 0px;
    padding: 0px;
}

/* Default Dark Mode Styles */
:root {
    --primary-color: #121212;  /* Dark Background */
    --secondary-color: #1e1e1e; /* Dark secondary background */
    --text-color: #f5f5f5; /* Light text color */
    --subheading-color: #dcdcdc; /* Light subheading color */
    --secondary-hover-color: #333; /* Hover color for dark mode */
    --placeholder-color: #888;
}

/* Light Mode Styles */
body.light-mode {
    --primary-color: #ffffff;  /* Light Background */
    --secondary-color: #f9f9f9; /* Light secondary background */
    --text-color: #333; /* Dark text color */
    --subheading-color: #666; /* Dark subheading color */
    --secondary-hover-color: #ddd; /* Hover color for light mode */
    --placeholder-color: #111;    /* Dark black placeholder color */
    --button-color: #111; /* Dark black color for buttons */
    --button-hover-color: #222; /* Slightly lighter black for button hover */
    --input-background: #111; /* Dark black background for input */
    --input-text-color: #f5f5f5; /* Light text color for input */
}

/* Body styling for both modes */
body {
    background-color: var(--primary-color);
    color: var(--text-color);
}

body.hide-header .header {
    margin: 0;
    display: none;
  }

.header, .typing-area {
    color: var(--text-color);
    /* padding-left:5px;
    padding-right: 5px; */
}

.header .typing-form{
    max-width: 1000px;
    margin: 0 auto;
}

.chat-list .message.outgoing .message.incoming .message.incoming.loading {
    max-width: 1000px;
    margin: 0 auto;
}

.header, .chat-list .message, .typing-form {
    margin: 0 auto;
    max-width: 980px;
  }
  
  .header {
    margin-top: 6vh;
    padding: 1rem;
    overflow-x: hidden;
    overflow-y: auto;
  }

.header{
    margin-top: 7vh;
    padding: 1rem;
    /* display: none; */
}



.header :where(.title, .subtitle){
    font-weight: 450;
    line-height: 3.6rem;
}

.header .title {
    font-size: 2.7rem;
    width: fit-content;
    -webkit-background-clip: text; 
    background: linear-gradient(to right, #4285f4, #d96570);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.icon2 {
    /* filter: brightness(0) invert(1); */
}

.header .subtitle {
    font-size: 2.4rem; 
    color: var(--subheading-color);
}

.suggestionlist {
    margin-top: 9.5vh;
    list-style: none;
    display: flex;
    gap: 1.25rem;
    overflow-x: auto;
    scrollbar-width: none;
}

.suggestionlist .suggestion {
    background: var(--secondary-color);
    padding: 1.25rem;
    cursor: pointer;
    width: 227px;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-between;
    border-radius: 0.75rem;
    background: var(--secondary-color);
}

.suggestionlist .suggestion .text {
    font-weight: 400;
}

.suggestionlist .suggestion .icon2 {
    height: 42px;
    width: 42px; 
    background: var(--primary-color);
    font-size: 1.3rem;
    margin-top: 2.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 100%;
}

.suggestionlist .suggestion:hover{
    background: var(--secondary-hover-color);
    /* transform: scale(0.9);  */
    box-shadow: 0 10px 20px rgba(0.2, 0.2, 0.2, 0.2); 
}

.typing-area {
    position: fixed;
    width: 100%;
    bottom: 0;
    padding: 10px;
    background: var(--primary-color);
}

/* Placeholder Text */
.typing-input::placeholder {
    color: var(--placeholder-color); /* Dark placeholder color */
}

button:hover {
    background-color: var(--button-hover-color);
}


.typing-area :where(.typing-form, .icon3){
    display:flex;
    gap: 0.75rem
}

.typing-area :where(.typing-form, .icon3){
    display: flex;
    gap: 075rem;
}

.typing-area .input-wrapper {
    display: flex;
    align-items: center;
    height: 56px;
    width: 100%;
    display: flex;
    position: relative;
}

.typing-area .typing-input{
    flex: 1; /* Makes the input field take the available space */
    width: 100%;
    height: 100%;
    border:none;
    outline: none;
    font-size: 1rem;
    color: var(--text-color);
    border-radius: 6.2rem;
    padding: 1.1rem 4rem 1.1rem 1.5rem;
    background: var(--secondary-color);

}

.typing-area .typing-input:focus {
    background: var(--secondary-hover-color);
}

.typing-area .typing-input::placeholder {
    color: var(--placeholder-color);
}

.icon3 {
    font-size: 20px; 
    margin-left: 0.5rem; /* Add space between icons */
    background: var(--secondary-color);
    color: var(--primary-color); /* Or any color that fits */
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  

.typing-area .icon3 {
    font-size: 20px;
    background: var(--secondary-color);
    height:50px;
    width: 50px;
    cursor: pointer;
    items-align: center;
    justify-content: center;
    border-radius: 50%;
    border: none;
    transform: scale(0.9);  
    /* visibility: hidden; Hide by default */
}

.typing-area .input-wrapper.icon3 {
    position: absolute;
    right: 0;
    outline:none;
    border: none;
    color: var(--text-color);
    background: none;
    transform: scale(0);
    transition: transform 0.2s ease;
}

.typing-area .input-wrapper .typing-input:valid ~ .icon3 {
    transform: scale(1);
    visibility: visible;
}

.typing-area .icon3:hover {
    background: var(--secondary-hover-color)!important;
}


.typing-area .disclaimer-text {
    font-size: 0.85rem;
    margin-top: 1rem;
    text-align: center;
    color: var(--text-color);
}

/* Theme toggle and delete buttons in light mode */
body.light-mode .theme-toggle,
body.light-mode .delete-button,
body.light-mode .fa-arrow-up-from-bracket  {
    background: var(--button-color);
    /* color: #333;  Darker text for better contrast in light mode */
    color: var(--primary-color);  
}

body.light-mode .theme-toggle:hover,
body.light-mode .delete-button:hover, 
body.light-mode .fa-arrow-up-from-bracket:hover {
    /* background: var(--secondary-hover-color); */
    background: var(--button-hover-color);
}

/* Icon color changes for light/dark mode */
/* body.light-mode .theme-toggle i { */
    /* color: #333; Darker icon color for light mode */
/* } */

/* Icon color changes for light/dark mode */
body.light-mode .theme-toggle i,
body.light-mode #themeToggleButton i,
body.light-mode #deleteButton i,
body.light-mode .fa-arrow-up-from-bracket {
    /* color: #333;                           Darker icon color for light mode */
    color: var(--text-color);
}

body.dark-mode .theme-toggle i {
    color: #f0f0f0; /* Lighter icon color for dark mode */
}

/* Set color for the buttons' icon and hover state */
#themeToggleButton i,
#deleteButton i,
.fa-arrow-up-from-bracket {
    color: rgba(0, 0, 0, 0.7); /* Adjusted for light mode to be visible */
}

#themeToggleButton,
#deleteButton,
.fa-arrow-up-from-bracket {
     /* background-color: rgba(255,255,255, 0.5); More visible background */
    background: var(--secondary-color);
    border-radius: 50%;
    padding: 10px;
}

#themeToggleButton:hover,
#deleteButton:hover,
.fa-arrow-up-from-bracket:hover {
    /* background-color: rgba(255,255,255,0.7); Hover effect for visibility */
    background-color: var(--secondary-hover-color); /* Hover effect */
}


/* Hover effect for icons */
.icon3:hover {
    background-color: var(--secondary-hover-color);
}

/* Ensure button color in light mode */
body.light-mode .theme-toggle, 
body.light-mode .delete-button, 
body.light-mode .icon3 {
    background: var(--button-color); /* Button color for light mode */
    color: var(--primary-color); /* Text/icon color */
}

/* Icon color in light mode */
body.light-mode #themeToggleButton i,
body.light-mode #deleteButton i,
body.light-mode .fa-arrow-up-from-bracket {
    color: var(--text-color); /* Light mode text color */
}

/* Adjusting the button's hover effect */
body.light-mode .theme-toggle:hover, 
body.light-mode .delete-button:hover, 
body.light-mode .icon3:hover {
    background: var(--button-hover-color); /* Adjust hover for light mode */
}


/* Light Mode: Set arrow button background color to transparent */
body.light-mode .fa-arrow-up-from-bracket {
    background: transparent; /* No background color */
    color: var(--text-color); /* Icon color to match light mode text color */
}

/* Ensure hover effect is still applied */
body.light-mode .fa-arrow-up-from-bracket:hover {
    background: var(--button-hover-color); /* Add hover effect if desired */
}


.chat-list .message .image{
    width: 40px;
    height:40px;
    object-fit: cover;
    border-radius: 50%;
    align-self: flex-start;
}

.chat-list .message .message-content {
 display: flex; 
 align-items: center;
 gap: 1.5rem;
 width: 100%;
}

.chat-list .message .text{
  color: var(--text-color);
  white-space: pre-wrap;
}

.chat-list .message.loading .text {
    display: none;
}
.chat-list .message.incoming{
    margin-top: 1.5rem;
}

.chat-list{
    padding: 2rem 1rem 12rem;
    max-height: 100vh;
    overflow-y: auto;
    scrollbar-color: #999 transparent;
}

.chat-list .message .copy{
    color: var(--text-color);
    height:35px;
    width: 35px;
    font-size: 1.25rem;
    margin-left: 3.5rem;
    background: var(--secondary-color);
    display: flex;
    cursor: pointer;
    align-items: center;
    border-radius: 50%;
    justify-content: center;
    visibility: hidden;
}

.chat-list .message:not(.loading):hover .copy{
   visibility:visible;
}

.chat-list .message .copy:hover {
    background: var(--secondary-color);
    /* transition: transform 0.2s ease; */
}

/* .chat-list .message .icon.hide {
    visibility: hidden;
  }
  
.chat-list .message:not(.loading, .error):hover .icon:not(.hide){
    visibility: visible;
  } */


.chat-list .loading-indicator {
    display: none; 
    width: 100%;
    flex-direction: column;
    gap: 0.2rem;
}

/* Show loading indicator only when message has loading class */
.chat-list .message.loading .loading-indicator {
    display: flex; /* Show loading indicator during loading */
}

.chat-list .message:not(.loading) .loading-indicator {
    display: none; /* Hide loading indicator when loading is complete */
}

/* animations........ */

.chat-list .message .loading-indicator .loading-bar{
    height: 11px;
    width: 100%;
    border-radius: 0.14rem;
    background: linear-gradient(to right, #4285f4, var(--primary-color), #4285f4 );
    margin-bottom: 0.8rem;
    animation: animate 3s linear infinite;
}

@keyframes animate {
    0%{
        background-position: -800px 0;
    }

    100%{
        background-position: 800px 0;
    }
}

.chat-list .loading-indicator .loading-bar:last-child {
    width: 70%;
}

/* rotate img while loading.....  */

.chat-list .message.loading .image{
    animation: rotate 3s linear infinite;
}

@keyframes rotate {
    100%{
       transform: rotate(360deg);
    }
}

/* Positioning and Styling for Action Buttons */
.action-buttons {
    display: flex;
    gap: 0.75rem;
    justify-content: center;
    margin-top: 1rem;
}

.theme-toggle, .delete-button {
    background: var(--secondary-color);
    height: 50px;
    width: 50px;
    font-size: 20px;
    border-radius: 50%;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s, transform 0.3s;
}

.theme-toggle:hover, .delete-button:hover {
    background: var(--secondary-hover-color);
}

/* Icon Color for Light/Dark Mode */
body.light-mode .theme-toggle i {
    color: #333; /* Darker for light mode */
}
body.dark-mode .theme-toggle i {
    color: #f0f0f0; /* Lighter for dark mode */
}

/* Make the icon color white */
#themeToggleButton i,
#deleteButton i,
.fa-arrow-up-from-bracket {
    color: rgba(255, 255, 255, 0.7); /* Light white */
}

/* Make the button background white with some transparency */
#themeToggleButton,
#deleteButton,
.fa-arrow-up-from-bracket {
    background-color: rgba(255, 255, 255, 0.1); /* White with transparency */
    border-radius: 50%; /* Make buttons circular */
    padding: 10px; /* Adjust padding as needed */
}


/* Responsive media query code for small screen */
@media (max-width: 768px) {
    .header :is(.title, .subtitle) {
      font-size: 2rem;
      line-height: 2.6rem;
    }
  
    .header .subtitle {
      font-size: 1.7rem;
    }
  
    .typing-area :where(.typing-form, .action-buttons) {
      gap: 0.4rem;
    }
  
    .typing-form .input-wrapper {
      height: 50px;
    }
  
    .typing-form .typing-input {
      padding: 1.1rem 3.5rem 1.1rem 1.2rem;
    }
  
    .typing-area .icon {
      height: 50px;
      width: 50px;
    }
  
    .typing-area .disclaimer-text {
      font-size: 0.75rem;
      margin-top: 0.5rem;
    }
  }

    /* Responsive media query code for large screen */
  @media (min-width: 1024px) {
    .header :is(.title, .subtitle) {
      font-size: 3rem;
      line-height: 3.6rem;
    }
  
    .header .subtitle {
      font-size: 2.4rem;
    }
  
    .typing-area :where(.typing-form, .action-buttons) {
      gap: 0.75rem;
    }
  
    .typing-form .input-wrapper {
      height: 56px;
    }
  
    .typing-form .typing-input {
      padding: 1.1rem 4rem 1.1rem 1.5rem;
    }
  
    .typing-area .icon {
      height: 50px;
      width: 50px;
    }
  
    .typing-area .disclaimer-text {
      font-size: 0.85rem;
      margin-top: 1rem;
    }
  }